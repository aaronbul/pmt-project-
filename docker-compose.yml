services:
  # Base de données MySQL
  mysql:
    image: mysql:8.0
    container_name: pmt-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: pmt_db
      MYSQL_USER: pmt_user
      MYSQL_PASSWORD: pmt_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - pmt-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot
  backend:
    build:
      context: ./pmt-backend
      dockerfile: Dockerfile
    container_name: pmt-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/pmt_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: pmt_user
      SPRING_DATASOURCE_PASSWORD: pmt_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - pmt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Angular
  frontend:
    build:
      context: ./pmt-frontend
      dockerfile: Dockerfile
    container_name: pmt-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - pmt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # phpMyAdmin (optionnel - pour la gestion de la base de données)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pmt-phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: pmt_user
      PMA_PASSWORD: pmt_password
    depends_on:
      - mysql
    networks:
      - pmt-network

volumes:
  mysql_data:

networks:
  pmt-network:
    driver: bridge 